<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="Button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>